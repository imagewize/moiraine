import{getContext as e,getElement as n,store as o}from"@wordpress/interactivity";console.log("ðŸ”¥ Menu Designer view.js loaded");const{state:c,actions:l}=o("moiraine/menu-designer",{state:{get isMenuOpen(){const n=e();return Object.values(n.menuOpenedBy||{}).filter(Boolean).length>0}},actions:{toggleMenuOnClick(){console.log("ðŸ”¥ toggleMenuOnClick called");const o=e(),{ref:s}=n();console.log("ðŸ”¥ context:",o),console.log("ðŸ”¥ context.menuOpenedBy:",o.menuOpenedBy),console.log("ðŸ”¥ state.isMenuOpen:",c.isMenuOpen),o.menuOpenedBy?.click||o.menuOpenedBy?.focus?(console.log("ðŸ”¥ Closing menu"),l.closeMenuOnClick()):(console.log("ðŸ”¥ Opening menu"),o.previousFocus=s,l.openMenu("click"))},closeMenuOnClick(){l.closeMenu("click"),l.closeMenu("focus")},handleMenuKeydown(n){e().menuOpenedBy.click&&"Escape"===n?.key&&l.closeMenuOnClick()},handleOutsideClick(e){const{ref:o}=n(),c=o.querySelector(".moiraine-menu-designer");c&&!c.contains(e.target)&&l.closeMenuOnClick()},openMenu(n="click"){console.log("ðŸ”¥ openMenu called with:",n);const o=e();o.menuOpenedBy&&"object"==typeof o.menuOpenedBy||(console.log("ðŸ”¥ Initializing context.menuOpenedBy"),o.menuOpenedBy={}),o.menuOpenedBy[n]=!0,console.log("ðŸ”¥ After setting, context.menuOpenedBy:",o.menuOpenedBy),console.log("ðŸ”¥ state.isMenuOpen after open:",c.isMenuOpen)},closeMenu(n="click"){const o=e();o.menuOpenedBy[n]=!1,c.isMenuOpen||(o.previousFocus&&o.previousFocus.focus(),o.previousFocus=null)}}});